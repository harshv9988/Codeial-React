{"version":3,"sources":["actions/actionTypes.js","helpers/urls.js","helpers/utils.js","actions/posts.js","components/PostList.js","actions/auth.js","actions/search.js","components/Navbar.js","actions/friends.js","components/Home.js","components/Page404.js","components/Login.js","components/Register.js","components/Setting.js","actions/profile.js","components/UserProfile.js","components/FriendList.js","components/FriendListItem.js","components/CreatePost.js","components/Comment.js","components/Post.js","components/Chat.js","components/App.js","reducers/auth.js","reducers/profile.js","reducers/friends.js","reducers/search.js","reducers/index.js","reducers/posts.js","index.js","store/index.js"],"names":["UPDATE_POSTS","ADD_POST","ADD_COMMENT","LOGIN_START","LOGIN_SUCCESS","LOGIN_FAIL","SIGNUP_START","SIGNUP_SUCCESS","SIGNUP_FAIL","AUTHENTICATE_USER","SIGNOUT_USER","CLEAR_ERROR_MSG","EDIT_USER_SUCCESSFUL","EDIT_USER_FAILED","USER_PROFILE_SUCCESS","USER_PROFILE_FAILURE","FETCH_USER_PROFILE","FETCH_FRIENDS_SUCCESS","ADD_FRIEND","REMOVE_FRIEND","UPDATE_POST_LIKE","UPDATE_COMMENT_LIKE","FETCH_SEARCH_RESULTS_SUCCESS","API_ROOT","APIUrls","page","limit","userId","id","likeType","searchText","getFormBody","params","result","property","key","encodeURIComponent","value","push","join","getJwtToken","localStorage","getItem","fetchPosts","dispatch","url","fetch","then","response","json","data","posts","type","createPost","content","method","headers","Authorization","body","post","console","log","success","createComment","postId","post_id","comment","addComment","addLike","addLikeToStore","commentId","allCommentLikeToStore","PostList","this","props","isLoggedIn","className","map","_id","Component","login","email","password","setItem","token","user","errorMessage","message","error","signup","name","confirmpass","confirm_password","clearAuthState","editUser","confirmPassword","searchResultsSuccess","users","connect","state","auth","results","search","to","src","alt","placeholder","onChange","e","target","repsonse","searchUsers","length","onClick","removeItem","fetchUserFriends","friends","Home","Page404","Login","handleemailChange","setState","handlePasswordChange","handleFormSubmit","preventDefault","isProgress","from","location","pathname","required","disabled","handleNameChange","handleEmailChange","handleConfirmPasswordChange","Settings","handleChange","fieldname","val","handleSave","editMode","fetchUserProfile","UserProfile","handleAddFriendClick","a","match","options","successMessage","friend","friendship","handleRemoveFriendClick","extra","isuserFriend","to_user","indexOf","prevProps","prevParams","currentParams","profile","checkUserFriend","inProgress","FriendsList","FriendsListItem","CreatePost","handleOnClick","isCommentLikedByUser","likes","includes","Post","handleAddComment","handleOnCommentChange","handlePostLike","isPostLikedByUser","comments","onKeyPress","Chat","setupConnections","socketConnection","socket","self","on","emit","user_email","userEmail","chatroom","messages","messageObject","check","typedMessage","handleSubmit","io","PrivateRoute","PrivateRouteProps","path","component","render","App","jwt_decode","authenticateUser","exact","Register","Setting","React","initialAuthState","initalProfileState","defaultProfileState","initialSearchState","combineReducers","action","newPost","newLike","newPostLike","newCommentLike","filter","store","createStore","reducer","applyMiddleware","thunk","logger","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6876dcd3.chunk.js","sourcesContent":["export const UPDATE_POSTS = \"UPDATE_POSTS\";\r\nexport const ADD_POST = \"ADD_POST\";\r\nexport const ADD_COMMENT = \"ADD_COMMENT\";\r\n// for login\r\n\r\nexport const LOGIN_START = \"LOGIN_START\";\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\r\nexport const SIGNUP_START = \"SIGNUP_START\";\r\nexport const SIGNUP_SUCCESS = \"SIGNUP_SUCCESS\";\r\nexport const SIGNUP_FAIL = \"SIGNUP_FAIL\";\r\nexport const AUTHENTICATE_USER = \"AUTHENTICATE_USER\";\r\nexport const SIGNOUT_USER = \"SIGNOUT_USER\";\r\n\r\nexport const CLEAR_ERROR_MSG = \"CLEAR_ERROR_MSG\";\r\n\r\nexport const EDIT_USER_SUCCESSFUL = \"EDIT_USER_SUCCESSFUL\";\r\nexport const EDIT_USER_FAILED = \"EDIT_USER_FAILED\";\r\n\r\nexport const USER_PROFILE_SUCCESS = \"USER_PROFILE_SUCCESS\";\r\nexport const USER_PROFILE_FAILURE = \"USER_PROFILE_FAILURE\";\r\nexport const FETCH_USER_PROFILE = \"FETCH_USER_PROFILE\";\r\n\r\n// friends\r\nexport const FETCH_FRIENDS_SUCCESS = \"FETCH_FRIENDS_SUCCESS\";\r\nexport const CLEAR_FRIEND_ARRAY = \"CLEAR_FRIEND_ARRAY\";\r\nexport const ADD_FRIEND = \"ADD_FRIEND\";\r\nexport const REMOVE_FRIEND = \"REMOVE_FRIEND\";\r\n\r\n//Likes\r\nexport const UPDATE_POST_LIKE = \"UPDATE_POST_LIKE\";\r\nexport const UPDATE_COMMENT_LIKE = \"UPDATE_COMMENT_LIKE\";\r\nexport const FETCH_SEARCH_RESULTS_SUCCESS = \"FETCH_SEARCH_RESULTS_SUCCESS\";\r\n","const API_ROOT = 'http://codeial.codingninjas.com:8000/api/v2/';\r\n\r\nexport const APIUrls = {\r\n  login: () => `${API_ROOT}/users/login`,\r\n  signup: () => `${API_ROOT}/users/signup`,\r\n  editProfile: () => `${API_ROOT}/users/edit`,\r\n  fetchPosts: (page = 1, limit = 10) =>\r\n    `${API_ROOT}/posts?page=${page}&limit=${limit}`,\r\n  userProfile: (userId) => `${API_ROOT}/users/${userId}`,\r\n  userFriends: () => `${API_ROOT}/friendship/fetch_user_friends`,\r\n  addFriend: (userId) =>\r\n    `${API_ROOT}/friendship/create_friendship?user_id=${userId}`,\r\n  removeFriend: (userId) =>\r\n    `${API_ROOT}/friendship/remove_friendship?user_id=${userId}`,\r\n  createPost: () => `${API_ROOT}/posts/create`,\r\n  createComment: () => `${API_ROOT}/comments/`,\r\n  toggleLike: (id, likeType) =>\r\n    `${API_ROOT}/likes/toggle?likeable_id=${id}&likeable_type=${likeType}`,\r\n  userSearch: (searchText) => `${API_ROOT}/users/search?text=${searchText}`,\r\n};\r\n","export function getFormBody(params) {\r\n  let result = [];\r\n\r\n  for (let property in params) {\r\n    let key = encodeURIComponent(property);\r\n    let value = encodeURIComponent(params[property]);\r\n\r\n    result.push(key + '=' + value);\r\n  }\r\n  return result.join('&');\r\n}\r\n\r\nexport function getJwtToken() {\r\n  return localStorage.getItem('token');\r\n}\r\n","import {\r\n  UPDATE_POSTS,\r\n  ADD_POST,\r\n  ADD_COMMENT,\r\n  UPDATE_POST_LIKE,\r\n  UPDATE_COMMENT_LIKE,\r\n} from './actionTypes';\r\nimport { APIUrls } from '../helpers/urls';\r\nimport { getJwtToken, getFormBody } from '../helpers/utils';\r\n\r\nexport function fetchPosts() {\r\n  return (dispatch) => {\r\n    const url = APIUrls.fetchPosts();\r\n    fetch(url)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        dispatch(updatePosts(data.data.posts));\r\n      });\r\n  };\r\n}\r\n\r\nexport function updatePosts(posts) {\r\n  return {\r\n    type: UPDATE_POSTS,\r\n    posts,\r\n  };\r\n}\r\n\r\nexport function addPost(post) {\r\n  return {\r\n    type: ADD_POST,\r\n    post,\r\n  };\r\n}\r\n\r\nexport function createPost(content) {\r\n  return (dispatch) => {\r\n    const url = APIUrls.createPost();\r\n\r\n    fetch(url, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/x-www-form-urlencoded',\r\n        Authorization: `Bearer ${getJwtToken()}`,\r\n      },\r\n      body: getFormBody({ content }),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        console.log('dATA', data);\r\n\r\n        if (data.success) {\r\n          dispatch(addPost(data.data.post));\r\n        }\r\n      });\r\n  };\r\n}\r\n\r\nexport function createComment(content, postId) {\r\n  return (dispatch) => {\r\n    const url = APIUrls.createComment();\r\n    fetch(url, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/x-www-form-urlencoded',\r\n        Authorization: `Bearer ${getJwtToken()}`,\r\n      },\r\n      body: getFormBody({ content, post_id: postId }),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        if (data.success) {\r\n          dispatch(addComment(data.data.comment, postId));\r\n        }\r\n      });\r\n  };\r\n}\r\n\r\nexport function addComment(comment, postId) {\r\n  return {\r\n    type: ADD_COMMENT,\r\n    comment,\r\n    postId,\r\n  };\r\n}\r\n\r\nexport function addLike(id, likeType, userId) {\r\n  return (dispatch) => {\r\n    const url = APIUrls.toggleLike(id, likeType);\r\n\r\n    fetch(url, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/x-www-form-urlencoded',\r\n        Authorization: `Bearer ${getJwtToken()}`,\r\n      },\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        console.log('LIKE DATA', data);\r\n\r\n        if (data.success) {\r\n          if (likeType === 'Post') {\r\n            dispatch(addLikeToStore(id, userId));\r\n          } else {\r\n            dispatch(allCommentLikeToStore(id, userId));\r\n          }\r\n        }\r\n      });\r\n  };\r\n}\r\n\r\nexport function allCommentLikeToStore(commentId, userId) {\r\n  return {\r\n    type: UPDATE_COMMENT_LIKE,\r\n    commentId,\r\n    userId,\r\n  };\r\n}\r\n\r\nexport function addLikeToStore(postId, userId) {\r\n  return {\r\n    type: UPDATE_POST_LIKE,\r\n    postId,\r\n    userId,\r\n  };\r\n}\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport { CreatePost } from './index';\r\nimport { Post } from './index';\r\n\r\nclass PostList extends Component {\r\n  render() {\r\n    const { posts, isLoggedIn } = this.props;\r\n    return (\r\n      <div className=\"posts-list\">\r\n        {isLoggedIn && <CreatePost />}\r\n        {posts.map((post) => (\r\n          <Post post={post} key={post._id} />\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nPostList.propTypes = {\r\n  posts: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default PostList;\r\n","import {\r\n  LOGIN_START,\r\n  LOGIN_FAIL,\r\n  LOGIN_SUCCESS,\r\n  SIGNUP_START,\r\n  SIGNUP_SUCCESS,\r\n  SIGNUP_FAIL,\r\n  AUTHENTICATE_USER,\r\n  SIGNOUT_USER,\r\n  CLEAR_ERROR_MSG,\r\n  EDIT_USER_SUCCESSFUL,\r\n  EDIT_USER_FAILED,\r\n} from \"./actionTypes\";\r\nimport { APIUrls } from \"../helpers/urls\";\r\nimport { getFormBody, getJwtToken } from \"../helpers/utils\";\r\n\r\nexport function startLogin() {\r\n  return {\r\n    type: LOGIN_START,\r\n  };\r\n}\r\n\r\nexport function loginFailed(errorMessage) {\r\n  return {\r\n    type: LOGIN_FAIL,\r\n    error: errorMessage,\r\n  };\r\n}\r\n\r\nexport function loginSuccess(user) {\r\n  return {\r\n    type: LOGIN_SUCCESS,\r\n    user: user,\r\n  };\r\n}\r\n\r\nexport function login(email, password) {\r\n  return (dispatch) => {\r\n    const url = APIUrls.login();\r\n    dispatch(startLogin());\r\n    fetch(url, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n      },\r\n      body: getFormBody({ email, password }),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        console.log(\"data\", data);\r\n        if (data.success) {\r\n          localStorage.setItem(\"token\", data.data.token);\r\n          dispatch(loginSuccess(data.data.user));\r\n          return;\r\n        }\r\n        dispatch(loginFailed(data.message));\r\n      });\r\n  };\r\n}\r\n\r\nexport function startSignup() {\r\n  return {\r\n    type: SIGNUP_START,\r\n  };\r\n}\r\n\r\nexport function signupSuccess(user) {\r\n  return {\r\n    type: SIGNUP_SUCCESS,\r\n    user: user,\r\n  };\r\n}\r\n\r\nexport function signupFailed(errorMessage) {\r\n  return {\r\n    type: SIGNUP_FAIL,\r\n    error: errorMessage,\r\n  };\r\n}\r\n\r\nexport function signup(name, email, password, confirmpass) {\r\n  return (dispatch) => {\r\n    const url = APIUrls.signup();\r\n    dispatch(startSignup());\r\n    fetch(url, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n      },\r\n      body: getFormBody({\r\n        name,\r\n        email,\r\n        password,\r\n        confirm_password: confirmpass,\r\n      }),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        console.log(\"signup-data\", data);\r\n        if (data.success) {\r\n          localStorage.setItem(\"token\", data.data.token);\r\n          dispatch(signupSuccess(data.data.user));\r\n          return;\r\n        }\r\n        dispatch(signupFailed(data.message));\r\n      });\r\n  };\r\n}\r\n\r\nexport function authenticateUser(user) {\r\n  return {\r\n    type: AUTHENTICATE_USER,\r\n    user: user,\r\n  };\r\n}\r\n\r\nexport function signoutuser() {\r\n  return {\r\n    type: SIGNOUT_USER,\r\n  };\r\n}\r\n\r\nexport function clearAuthState() {\r\n  return {\r\n    type: CLEAR_ERROR_MSG,\r\n  };\r\n}\r\n\r\nexport function editUserSuccessful(user) {\r\n  return {\r\n    type: EDIT_USER_SUCCESSFUL,\r\n    user,\r\n  };\r\n}\r\n\r\nexport function editUserFailed(error) {\r\n  return {\r\n    type: EDIT_USER_FAILED,\r\n    error,\r\n  };\r\n}\r\n\r\nexport function editUser(name, password, confirmPassword, userId) {\r\n  return (dispatch) => {\r\n    const url = APIUrls.editProfile();\r\n    fetch(url, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n        Authorization: `Bearer ${getJwtToken()}`,\r\n      },\r\n      body: getFormBody({\r\n        name,\r\n        password,\r\n        confirm_password: confirmPassword,\r\n        id: userId,\r\n      }),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        console.log(\"edit-profile-data\", data);\r\n        if (data.success) {\r\n          dispatch(editUserSuccessful(data.data.user));\r\n          if (data.data.token) {\r\n            localStorage.setItem(\"token\", data.data.token);\r\n          }\r\n          return;\r\n        }\r\n        dispatch(editUserFailed(data.message));\r\n      });\r\n  };\r\n}\r\n","import { FETCH_SEARCH_RESULTS_SUCCESS } from \"./actionTypes\";\r\nimport { getJwtToken } from \"../helpers/utils\";\r\nimport { APIUrls } from \"../helpers/urls\";\r\n\r\nexport function searchUsers(searchText) {\r\n  return (dispatch) => {\r\n    const url = APIUrls.userSearch(searchText);\r\n\r\n    fetch(url, {\r\n      headers: {\r\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n        Authorization: `Bearer ${getJwtToken()}`,\r\n      },\r\n    })\r\n      .then((repsonse) => repsonse.json())\r\n      .then((data) => {\r\n        console.log(\"SEARCH data\", data);\r\n        if (data.success) {\r\n          dispatch(searchResultsSuccess(data.data.users));\r\n        } else {\r\n          dispatch(searchResultsSuccess([]));\r\n        }\r\n      });\r\n  };\r\n}\r\n\r\nexport function searchResultsSuccess(users) {\r\n  return {\r\n    type: FETCH_SEARCH_RESULTS_SUCCESS,\r\n    users,\r\n  };\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { signoutuser } from \"../actions/auth\";\r\nimport { searchUsers } from \"../actions/search\";\r\n\r\nfunction Navbar(props) {\r\n  const handleSignout = () => {\r\n    localStorage.removeItem(\"token\");\r\n    props.dispatch(signoutuser());\r\n  };\r\n\r\n  const handleSearch = (e) => {\r\n    const searchText = e.target.value;\r\n\r\n    props.dispatch(searchUsers(searchText));\r\n  };\r\n\r\n  const { auth, results } = props;\r\n  return (\r\n    <nav className=\"nav\">\r\n      <div className=\"left-div\">\r\n        <Link to=\"/\">\r\n          <img\r\n            src=\"https://ninjasfiles.s3.amazonaws.com/0000000000003454.png\"\r\n            alt=\"logo\"\r\n          />\r\n        </Link>\r\n      </div>\r\n      <div className=\"search-container\">\r\n        <img\r\n          className=\"search-icon\"\r\n          src=\"https://image.flaticon.com/icons/svg/483/483356.svg\"\r\n          alt=\"search-icon\"\r\n        />\r\n        <input placeholder=\"Search\" onChange={handleSearch} />\r\n\r\n        {results.length > 0 && (\r\n          <div className=\"search-results\">\r\n            <ul>\r\n              {results.map((user) => (\r\n                <li className=\"search-results-row\" key={user._id}>\r\n                  <Link to={`/user/${user._id}`}>\r\n                    <img\r\n                      src=\"https://image.flaticon.com/icons/svg/2154/2154651.svg\"\r\n                      alt=\"user-dp\"\r\n                    />\r\n                    <span>{user.name}</span>\r\n                  </Link>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        )}\r\n      </div>\r\n      <div className=\"right-nav\">\r\n        {auth.isLoggedIn && (\r\n          <div className=\"user\">\r\n            <Link to=\"/settings\">\r\n              <img\r\n                src=\"https://image.flaticon.com/icons/svg/2154/2154651.svg\"\r\n                alt=\"user-dp\"\r\n                id=\"user-dp\"\r\n              />\r\n            </Link>\r\n\r\n            <span>{auth.user.name}</span>\r\n          </div>\r\n        )}\r\n\r\n        <div className=\"nav-links\">\r\n          <ul>\r\n            {!auth.isLoggedIn && (\r\n              <li>\r\n                <Link to=\"/login\">Log in</Link>\r\n              </li>\r\n            )}\r\n            {auth.isLoggedIn && <li onClick={handleSignout}>Log out</li>}\r\n\r\n            {!auth.isLoggedIn && (\r\n              <li>\r\n                <Link to=\"/signup\">Register</Link>\r\n              </li>\r\n            )}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    auth: state.auth,\r\n    results: state.search.results,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Navbar);\r\n","import { APIUrls } from '../helpers/urls';\r\nimport { getJwtToken } from '../helpers/utils';\r\nimport {\r\n  FETCH_FRIENDS_SUCCESS,\r\n  ADD_FRIEND,\r\n  REMOVE_FRIEND,\r\n} from './actionTypes';\r\n\r\nexport function fetchUserFriends(userId) {\r\n  return (dispatch) => {\r\n    const url = APIUrls.userFriends(userId);\r\n    fetch(url, {\r\n      headers: {\r\n        'Content-Type': 'application/x-www-form-urlencoded',\r\n        Authorization: `Bearer ${getJwtToken()}`,\r\n      },\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        dispatch(fetchFriendsSucces(data.data.friends));\r\n      });\r\n  };\r\n}\r\n\r\nexport function fetchFriendsSucces(friends) {\r\n  return {\r\n    type: FETCH_FRIENDS_SUCCESS,\r\n    friends,\r\n  };\r\n}\r\n\r\nexport function addFriend(friend) {\r\n  return {\r\n    type: ADD_FRIEND,\r\n    friend,\r\n  };\r\n}\r\n\r\nexport function removeFriend(userId) {\r\n  return {\r\n    type: REMOVE_FRIEND,\r\n    userId,\r\n  };\r\n}\r\n","import React, { Component } from 'react';\r\nimport { PostList, FriendsList, Chat } from './index';\r\nimport { fetchUserFriends } from '../actions/friends';\r\n\r\nexport default class Home extends Component {\r\n  componentDidMount() {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      this.props.dispatch(fetchUserFriends());\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { posts, isLoggedIn, friends } = this.props;\r\n    return (\r\n      <div className=\"home\">\r\n        <PostList posts={posts} isLoggedIn={isLoggedIn} />\r\n        {isLoggedIn && <FriendsList friends={friends} />}\r\n        {isLoggedIn && <Chat />}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Page404() {\r\n  return <div>Nothing Here....</div>;\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport { clearAuthState, login } from \"../actions/auth\";\r\n\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n    };\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.props.dispatch(clearAuthState());\r\n  }\r\n\r\n  handleemailChange = (e) => {\r\n    this.setState({\r\n      email: e.target.value,\r\n    });\r\n  };\r\n  handlePasswordChange = (e) => {\r\n    this.setState({\r\n      password: e.target.value,\r\n    });\r\n  };\r\n\r\n  handleFormSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { email, password } = this.state;\r\n    if (email && password) {\r\n      this.props.dispatch(login(email, password));\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { error, isProgress, isLoggedIn } = this.props.auth;\r\n    const { from } = this.props.location.state || { from: { pathname: \"/\" } };\r\n    if (isLoggedIn) {\r\n      return <Redirect to={from} />; //equivalent to {{pathname:\"/\"}} or we can directly give to = \"/\"\r\n    }\r\n\r\n    return (\r\n      <form className=\"login-form\">\r\n        <span className=\"login-signup-header\">Log In</span>\r\n        {error && <div className=\"alert error-dailog\">{error}</div>}\r\n        <div className=\"field\">\r\n          <input\r\n            type=\"email\"\r\n            placeholder=\"Email\"\r\n            onChange={this.handleemailChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"field\">\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            onChange={this.handlePasswordChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"field\">\r\n          {isProgress ? (\r\n            <button onClick={this.handleFormSubmit} disabled={isProgress}>\r\n              Logging In...\r\n            </button>\r\n          ) : (\r\n            <button onClick={this.handleFormSubmit} disabled={isProgress}>\r\n              Log In\r\n            </button>\r\n          )}\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapstateToPrps(state) {\r\n  return {\r\n    auth: state.auth,\r\n  };\r\n}\r\n\r\nexport default connect(mapstateToPrps)(Login);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport { clearAuthState, signup } from \"../actions/auth\";\r\n\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      name: \"\",\r\n      confirm_password: \"\",\r\n    };\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.props.dispatch(clearAuthState());\r\n  }\r\n\r\n  handleNameChange = (e) => {\r\n    this.setState({\r\n      name: e.target.value,\r\n    });\r\n  };\r\n\r\n  handleEmailChange = (e) => {\r\n    this.setState({\r\n      email: e.target.value,\r\n    });\r\n  };\r\n  handlePasswordChange = (e) => {\r\n    this.setState({\r\n      password: e.target.value,\r\n    });\r\n  };\r\n\r\n  handleConfirmPasswordChange = (e) => {\r\n    this.setState({\r\n      confirm_password: e.target.value,\r\n    });\r\n  };\r\n\r\n  handleFormSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { name, email, password, confirm_password } = this.state;\r\n    if (name && email && password && confirm_password) {\r\n      this.props.dispatch(signup(name, email, password, confirm_password));\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { error, isProgress, isLoggedIn } = this.props.auth;\r\n    if (isLoggedIn) {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n\r\n    return (\r\n      <form className=\"login-form\">\r\n        <span className=\"login-signup-header\">Register</span>\r\n        {error && <div className=\"alert error-dailog\">{error}</div>}\r\n        <div className=\"field\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Name\"\r\n            onChange={this.handleNameChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"field\">\r\n          <input\r\n            type=\"email\"\r\n            placeholder=\"Email\"\r\n            onChange={this.handleEmailChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"field\">\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            onChange={this.handlePasswordChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"field\">\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Confirm Password\"\r\n            onChange={this.handleConfirmPasswordChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"field\">\r\n          {isProgress ? (\r\n            <button onClick={this.handleFormSubmit} disabled={isProgress}>\r\n              Creating Your Space...\r\n            </button>\r\n          ) : (\r\n            <button onClick={this.handleFormSubmit} disabled={isProgress}>\r\n              Sign Up\r\n            </button>\r\n          )}\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapstateToPrps(state) {\r\n  return {\r\n    auth: state.auth,\r\n  };\r\n}\r\n\r\nexport default connect(mapstateToPrps)(Login);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { editUser, clearAuthState } from \"../actions/auth\";\r\n\r\nclass Settings extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: props.auth.user.name,\r\n      password: \"\",\r\n      confirmPassword: \"\",\r\n      editMode: false,\r\n    };\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.props.dispatch(clearAuthState());\r\n  }\r\n\r\n  handleChange = (fieldname, val) => {\r\n    this.setState({\r\n      [fieldname]: val,\r\n    });\r\n  };\r\n\r\n  handleSave = () => {\r\n    const { name, password, confirmPassword } = this.state;\r\n    const { user } = this.props.auth;\r\n\r\n    this.props.dispatch(editUser(name, password, confirmPassword, user._id));\r\n  };\r\n\r\n  render() {\r\n    const { user, error } = this.props.auth;\r\n    const { editMode } = this.state;\r\n    return (\r\n      <div className=\"settings\">\r\n        <div className=\"img-container\">\r\n          <img\r\n            src=\"https://image.flaticon.com/icons/svg/2154/2154651.svg\"\r\n            alt=\"user-dp\"\r\n          />\r\n        </div>\r\n        {error && <div className=\"alert error-dailog\">{error}</div>}\r\n        {error === false && (\r\n          <div className=\"alert success-dailog\">\r\n            Details updated Successfully\r\n          </div>\r\n        )}\r\n        <div className=\"field\">\r\n          <div className=\"field-label\">Email</div>\r\n          <div className=\"field-value\">{user.email}</div>\r\n        </div>\r\n\r\n        <div className=\"field\">\r\n          <div className=\"field-label\">name</div>\r\n          {editMode ? (\r\n            <input\r\n              type=\"text\"\r\n              onChange={(e) => this.handleChange(\"name\", e.target.value)}\r\n              value={this.state.name}\r\n            />\r\n          ) : (\r\n            <div className=\"field-value\">{user.name}</div>\r\n          )}\r\n        </div>\r\n\r\n        {editMode && (\r\n          <div className=\"field\">\r\n            <div className=\"field-label\">New password</div>\r\n\r\n            <input\r\n              type=\"password\"\r\n              onChange={(e) => this.handleChange(\"password\", e.target.value)}\r\n              value={this.state.password}\r\n            />\r\n          </div>\r\n        )}\r\n\r\n        {editMode && (\r\n          <div className=\"field\">\r\n            <div className=\"field-label\">Confirm password</div>\r\n\r\n            <input\r\n              type=\"password\"\r\n              onChange={(e) =>\r\n                this.handleChange(\"confirmPassword\", e.target.value)\r\n              }\r\n              value={this.state.confirmPassword}\r\n            />\r\n          </div>\r\n        )}\r\n\r\n        <div className=\"btn-grp\">\r\n          {editMode ? (\r\n            <button className=\"button save-btn\" onClick={this.handleSave}>\r\n              Save\r\n            </button>\r\n          ) : (\r\n            <button\r\n              className=\"button edit-btn\"\r\n              onClick={() => this.handleChange(\"editMode\", true)}\r\n            >\r\n              Edit profile\r\n            </button>\r\n          )}\r\n\r\n          {editMode && (\r\n            <div\r\n              className=\"go-back\"\r\n              onClick={() => this.handleChange(\"editMode\", false)}\r\n            >\r\n              Go back\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps({ auth }) {\r\n  return {\r\n    auth,\r\n  };\r\n}\r\nexport default connect(mapStateToProps)(Settings);\r\n","import {\r\n  USER_PROFILE_SUCCESS,\r\n  USER_PROFILE_FAILURE,\r\n  FETCH_USER_PROFILE,\r\n} from \"./actionTypes\";\r\nimport { APIUrls } from \"../helpers/urls\";\r\nimport { getJwtToken } from \"../helpers/utils\";\r\n\r\nexport function startUserProfileFetch() {\r\n  return {\r\n    type: FETCH_USER_PROFILE,\r\n  };\r\n}\r\n\r\nexport function userProfileSuccess(user) {\r\n  return {\r\n    type: USER_PROFILE_SUCCESS,\r\n    user,\r\n  };\r\n}\r\n\r\nexport function userProfileFailed(error) {\r\n  return {\r\n    type: USER_PROFILE_FAILURE,\r\n    error,\r\n  };\r\n}\r\n\r\nexport function fetchUserProfile(userId) {\r\n  return (dispatch) => {\r\n    dispatch(startUserProfileFetch());\r\n\r\n    const url = APIUrls.userProfile(userId);\r\n    fetch(url, {\r\n      headers: {\r\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n        Authorization: `Bearer ${getJwtToken()}`,\r\n      },\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        if (data.success) {\r\n          dispatch(userProfileSuccess(data.data.user));\r\n          return;\r\n        }\r\n        dispatch(userProfileFailed(data.message));\r\n        return;\r\n      });\r\n  };\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { fetchUserProfile } from \"../actions/profile\";\r\nimport { connect } from \"react-redux\";\r\nimport { APIUrls } from \"../helpers/urls\";\r\nimport { getJwtToken } from \"../helpers/utils\";\r\nimport { addFriend, removeFriend } from \"../actions/friends\";\r\n\r\nclass UserProfile extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      success: null,\r\n      error: null,\r\n      successMessage: null,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { match } = this.props;\r\n\r\n    if (match.params.userId) {\r\n      this.props.dispatch(fetchUserProfile(match.params.userId));\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const {\r\n      match: { params: prevParams },\r\n    } = prevProps;\r\n\r\n    const {\r\n      match: { params: currentParams },\r\n    } = this.props;\r\n\r\n    if (\r\n      prevParams &&\r\n      currentParams &&\r\n      prevParams.userId !== currentParams.userId\r\n    ) {\r\n      this.props.dispatch(fetchUserProfile(currentParams.userId));\r\n    }\r\n  }\r\n\r\n  handleAddFriendClick = async () => {\r\n    const { userId } = this.props.match.params;\r\n    const url = APIUrls.addFriend(userId);\r\n\r\n    const options = {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n        Authorization: `Bearer ${getJwtToken()}`,\r\n      },\r\n    };\r\n\r\n    const response = await fetch(url, options);\r\n    const data = await response.json();\r\n\r\n    if (data.success) {\r\n      this.setState({\r\n        success: true,\r\n        successMessage: \"Friend added Successfully\",\r\n      });\r\n\r\n      this.props.dispatch(addFriend(data.data.friendship));\r\n    } else {\r\n      this.setState({\r\n        success: null,\r\n        error: data.message,\r\n      });\r\n    }\r\n  };\r\n\r\n  handleRemoveFriendClick = async () => {\r\n    // Mini Assignment\r\n    const { match } = this.props;\r\n    const url = APIUrls.removeFriend(match.params.userId);\r\n\r\n    const extra = {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n        Authorization: `Bearer ${getJwtToken()}`,\r\n      },\r\n    };\r\n\r\n    const response = await fetch(url, extra);\r\n    const data = await response.json();\r\n    console.log(\"await data\", data);\r\n\r\n    if (data.success) {\r\n      // show user message\r\n      this.setState({\r\n        success: true,\r\n        successMessage: \"Removed friends successfully!\",\r\n      });\r\n      this.props.dispatch(removeFriend(match.params.userId));\r\n    } else {\r\n      this.setState({\r\n        success: null,\r\n        error: data.message,\r\n      });\r\n    }\r\n  };\r\n\r\n  isuserFriend = () => {\r\n    const { match, friends } = this.props;\r\n\r\n    const userId = match.params.userId;\r\n\r\n    const index = friends.map((friend) => friend.to_user._id).indexOf(userId);\r\n\r\n    if (index !== -1) return true;\r\n\r\n    return false;\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      match: { params }, // const {params} = match\r\n    } = this.props;\r\n    const { profile } = this.props;\r\n\r\n    const checkUserFriend = this.isuserFriend();\r\n    const { success, error, successMessage } = this.state;\r\n\r\n    if (profile.inProgress) {\r\n      return <h1>Loading.....</h1>;\r\n    }\r\n\r\n    return (\r\n      <div className=\"settings\">\r\n        <div className=\"img-container\">\r\n          <img\r\n            src=\"https://image.flaticon.com/icons/svg/2154/2154651.svg\"\r\n            alt=\"user-dp\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"field\">\r\n          <div className=\"field-label\">Name</div>\r\n          <div className=\"field-value\">{profile.user.name}</div>\r\n        </div>\r\n\r\n        <div className=\"field\">\r\n          <div className=\"field-label\">Email</div>\r\n          <div className=\"field-value\">{profile.user.email}</div>\r\n        </div>\r\n\r\n        {checkUserFriend ? (\r\n          <div className=\"btn-grp\">\r\n            <button\r\n              className=\"button save-btn\"\r\n              onClick={this.handleRemoveFriendClick}\r\n            >\r\n              Remove Friend\r\n            </button>\r\n          </div>\r\n        ) : (\r\n          <div className=\"btn-grp\">\r\n            <button\r\n              className=\"button save-btn\"\r\n              onClick={this.handleAddFriendClick}\r\n            >\r\n              Add Friend\r\n            </button>\r\n          </div>\r\n        )}\r\n\r\n        {success && (\r\n          <div className=\"alert success-dailog\">{successMessage}</div>\r\n        )}\r\n        {error && <div className=\"alert error-dailog\">{error}</div>}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps({ profile, friends }) {\r\n  return {\r\n    profile,\r\n    friends,\r\n  };\r\n}\r\nexport default connect(mapStateToProps)(UserProfile);\r\n","import React from \"react\";\r\nimport { FriendsListItem } from \"./\";\r\n\r\nconst FriendsList = (props) => {\r\n  return (\r\n    <div className=\"friends-list\">\r\n      <div className=\"header\">Friends</div>\r\n\r\n      {props.friends && props.friends.length === 0 && (\r\n        <div className=\"no-friends\">No friends found!</div>\r\n      )}\r\n\r\n      {props.friends &&\r\n        props.friends.map((friend) => (\r\n          <FriendsListItem friend={friend.to_user} key={friend._id} />\r\n        ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FriendsList;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction FriendsListItem(props) {\r\n  return (\r\n    <div>\r\n      <Link className=\"friends-item\" to={`user/${props.friend._id}`}>\r\n        <div className=\"friends-img\">\r\n          <img\r\n            src=\"https://image.flaticon.com/icons/svg/2154/2154651.svg\"\r\n            alt=\"user-pic\"\r\n          />\r\n        </div>\r\n        <div className=\"friends-name\">{props.friend.email}</div>\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FriendsListItem;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { createPost } from \"../actions/posts\";\r\nclass CreatePost extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      content: \"\",\r\n    };\r\n  }\r\n\r\n  handleOnClick = () => {\r\n    const { content } = this.state;\r\n    this.props.dispatch(createPost(content));\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      content: e.target.value,\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"create-post\">\r\n        <textarea\r\n          className=\"add-post\"\r\n          value={this.state.content}\r\n          onChange={this.handleChange}\r\n        />\r\n\r\n        <div>\r\n          <button id=\"add-post-btn\" onClick={this.handleOnClick}>\r\n            Add Post\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect()(CreatePost);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { addLike } from \"../actions/posts\";\r\n\r\nfunction Comment(props) {\r\n  const handleCommentLike = () => {\r\n    const { comment, user } = props;\r\n    props.dispatch(addLike(comment._id, \"Comment\", user._id));\r\n  };\r\n  const { user, comment } = props;\r\n  const isCommentLikedByUser = comment.likes.includes(user._id);\r\n\r\n  return (\r\n    <div className=\"post-comment-item\">\r\n      <div className=\"post-comment-header\">\r\n        <span className=\"post-comment-author\">{comment.user.name}</span>\r\n        <span onClick={handleCommentLike} className=\"post-comment-time\">\r\n          {isCommentLikedByUser ? (\r\n            <img\r\n              src=\"https://image.flaticon.com/icons/svg/1076/1076984.svg\"\r\n              alt=\"like post\"\r\n            />\r\n          ) : (\r\n            <img\r\n              src=\"https://image.flaticon.com/icons/svg/1077/1077035.svg\"\r\n              alt=\"likes-icon\"\r\n            />\r\n          )}\r\n        </span>\r\n        <span className=\"post-comment-likes\">{comment.likes.length} likes</span>\r\n      </div>\r\n\r\n      <div className=\"post-comment-content\">{comment.content}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps({ auth }) {\r\n  return {\r\n    user: auth.user,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Comment);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { Comment } from \"./\";\r\nimport { createComment, addLike } from \"../actions/posts\";\r\n\r\nclass Post extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      comment: \"\",\r\n    };\r\n  }\r\n  handleAddComment = (e) => {\r\n    const { comment } = this.state;\r\n    const { post } = this.props;\r\n\r\n    if (e.key === \"Enter\") {\r\n      this.props.dispatch(createComment(comment, post._id));\r\n\r\n      // clear comment\r\n      this.setState({\r\n        comment: \"\",\r\n      });\r\n    }\r\n  };\r\n\r\n  handleOnCommentChange = (e) => {\r\n    this.setState({\r\n      comment: e.target.value,\r\n    });\r\n  };\r\n\r\n  handlePostLike = () => {\r\n    const { post, user } = this.props;\r\n    this.props.dispatch(addLike(post._id, \"Post\", user._id));\r\n  };\r\n\r\n  render() {\r\n    const { post, user } = this.props;\r\n    const { comment } = this.state;\r\n\r\n    const isPostLikedByUser = post.likes.includes(user._id);\r\n\r\n    return (\r\n      <div className=\"post-wrapper\" key={post._id}>\r\n        <div className=\"post-header\">\r\n          <div className=\"post-avatar\">\r\n            <Link to={`/user/${post.user._id}`}>\r\n              <img\r\n                src=\"https://image.flaticon.com/icons/svg/2154/2154651.svg\"\r\n                alt=\"user-pic\"\r\n              />\r\n            </Link>\r\n            <div>\r\n              <span className=\"post-author\">{post.user.name}</span>\r\n              <span className=\"post-time\">a minute ago</span>\r\n            </div>\r\n          </div>\r\n          <div className=\"post-content\">{post.content}</div>\r\n\r\n          <div className=\"post-actions\">\r\n            <button className=\"post-like no-btn\" onClick={this.handlePostLike}>\r\n              {isPostLikedByUser ? (\r\n                <img\r\n                  src=\"https://image.flaticon.com/icons/svg/1076/1076984.svg\"\r\n                  alt=\"like post\"\r\n                />\r\n              ) : (\r\n                <img\r\n                  src=\"https://image.flaticon.com/icons/svg/1077/1077035.svg\"\r\n                  alt=\"likes-icon\"\r\n                />\r\n              )}\r\n              <span>{post.likes.length}</span>\r\n            </button>\r\n\r\n            <div className=\"post-comments-icon\">\r\n              <img\r\n                src=\"https://image.flaticon.com/icons/svg/1380/1380338.svg\"\r\n                alt=\"comments-icon\"\r\n              />\r\n              <span>{post.comments.length}</span>\r\n            </div>\r\n          </div>\r\n          <div className=\"post-comment-box\">\r\n            <input\r\n              placeholder=\"Start typing a comment\"\r\n              onChange={this.handleOnCommentChange}\r\n              onKeyPress={this.handleAddComment}\r\n              value={comment}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"post-comments-list\">\r\n            {post.comments.map((comment) => (\r\n              <Comment comment={comment} key={comment._id} postId={post._id} />\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nPost.propTypes = {\r\n  post: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction mapStateToProps({ auth }) {\r\n  return {\r\n    user: auth.user,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Post);\r\n","import React, { Component } from 'react';\r\nimport io from 'socket.io-client';\r\nimport { connect } from 'react-redux';\r\nimport '../chat.css';\r\n\r\nclass Chat extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      messages: [], // {content: 'some message', check: true}\r\n      typedMessage: '',\r\n    };\r\n    this.socket = io.connect('http://54.237.158.65:5000');\r\n    this.userEmail = props.user.email;\r\n\r\n    if (this.userEmail) {\r\n      console.log('email', this.userEmail);\r\n      this.setupConnections();\r\n    }\r\n  }\r\n\r\n  setupConnections = () => {\r\n    const socketConnection = this.socket;\r\n    const self = this;\r\n\r\n    console.log(this.socket);\r\n\r\n    socketConnection.on('connect', function () {\r\n      console.log('CONNECTION ESTABLISHED');\r\n\r\n      socketConnection.emit('join_room', {\r\n        user_email: self.userEmail,\r\n        chatroom: 'codeial',\r\n      });\r\n\r\n      socketConnection.on('user_joined', function (data) {\r\n        console.log('NEW USER JOINED', data);\r\n      });\r\n    });\r\n\r\n    this.socket.on('receive_message', function (data) {\r\n      // add message to state\r\n      const { messages } = self.state;\r\n      const messageObject = {};\r\n      messageObject.content = data.message;\r\n\r\n      if (data.user_email === self.userEmail) {\r\n        messageObject.check = true;\r\n      } else {\r\n        messageObject.check = false;\r\n      }\r\n\r\n      self.setState({\r\n        messages: [...messages, messageObject],\r\n        typedMessage: '',\r\n      });\r\n    });\r\n  };\r\n\r\n  handleSubmit = () => {\r\n    const { typedMessage } = this.state;\r\n\r\n    if (typedMessage && this.userEmail) {\r\n      this.socket.emit('send_message', {\r\n        message: typedMessage,\r\n        user_email: this.userEmail,\r\n        chatroom: 'codeial',\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { typedMessage, messages } = this.state;\r\n\r\n    return (\r\n      <div className=\"chat-container\">\r\n        <div className=\"chat-header\">Chat</div>\r\n        <div className=\"chat-messages\">\r\n          {messages.map((message) => (\r\n            <div\r\n              className={\r\n                message.check\r\n                  ? 'chat-bubble self-chat'\r\n                  : 'chat-bubble other-chat'\r\n              }\r\n            >\r\n              {message.content}\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <div className=\"chat-footer\">\r\n          <input\r\n            type=\"text\"\r\n            value={typedMessage}\r\n            onChange={(e) => this.setState({ typedMessage: e.target.value })}\r\n          />\r\n          <button onClick={this.handleSubmit}>Submit</button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps({ auth }) {\r\n  return {\r\n    user: auth.user,\r\n  };\r\n}\r\nexport default connect(mapStateToProps)(Chat);\r\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport {\n  BrowserRouter as Router,\n  Redirect,\n  Route,\n  Switch,\n} from \"react-router-dom\";\nimport jwt_decode from \"jwt-decode\";\n\nimport { fetchPosts } from \"../actions/posts\";\nimport {\n  Navbar,\n  Home,\n  Page404,\n  Login,\n  Register,\n  Setting,\n  UserProfile,\n} from \"./index\";\nimport { authenticateUser } from \"../actions/auth\";\n// import { fetchUserFriends } from \"../actions/friends\";\n\n// const Settings = () => {\n//   return <div>settings</div>;\n// };\n\nconst PrivateRoute = (PrivateRouteProps) => {\n  const { path, isLoggedIn, component: Component } = PrivateRouteProps;\n  return (\n    <Route\n      path={path}\n      render={(props) => {\n        return isLoggedIn ? (\n          <Component {...props} />\n        ) : (\n          <Redirect\n            to={{\n              pathname: \"/login\",\n              state: {\n                from: props.location,\n              },\n            }}\n          />\n        );\n      }}\n    />\n  );\n};\n\nclass App extends React.Component {\n  componentDidMount() {\n    this.props.dispatch(fetchPosts());\n    const token = localStorage.getItem(\"token\");\n    if (token) {\n      const user = jwt_decode(token);\n      console.log(\"answer\", user);\n      this.props.dispatch(\n        authenticateUser({\n          email: user.email,\n          name: user.name,\n          _id: user._id,\n        })\n      );\n      // this.props.dispatch(fetchUserFriends());\n    }\n  }\n\n  render() {\n    const { posts, auth, friends } = this.props;\n    return (\n      <Router>\n        <div>\n          <Navbar />\n          <Switch>\n            <Route\n              exact\n              path=\"/\"\n              render={(props) => {\n                return (\n                  <Home\n                    {...props}\n                    posts={posts}\n                    friends={friends}\n                    isLoggedIn={auth.isLoggedIn}\n                    dispatch={this.props.dispatch}\n                  />\n                );\n              }}\n            />\n            <Route path=\"/login\" component={Login} />\n            <Route path=\"/signup\" component={Register} />\n            <PrivateRoute\n              path=\"/settings\"\n              component={Setting}\n              isLoggedIn={auth.isLoggedIn}\n            />\n            <PrivateRoute\n              path=\"/user/:userId\"\n              component={UserProfile}\n              isLoggedIn={auth.isLoggedIn}\n            />\n            <Route component={Page404} />\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\n\nApp.propTypes = {\n  posts: PropTypes.array.isRequired,\n};\n\nfunction mapstateToProps(state) {\n  return {\n    posts: state.posts,\n    auth: state.auth,\n    friends: state.friends,\n  };\n}\n\nexport default connect(mapstateToProps)(App);\n","import {\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGIN_START,\r\n  SIGNUP_START,\r\n  SIGNUP_SUCCESS,\r\n  SIGNUP_FAIL,\r\n  AUTHENTICATE_USER,\r\n  SIGNOUT_USER,\r\n  CLEAR_ERROR_MSG,\r\n  EDIT_USER_SUCCESSFUL,\r\n  EDIT_USER_FAILED,\r\n} from \"../actions/actionTypes\";\r\n\r\nconst initialAuthState = {\r\n  user: {},\r\n  error: null,\r\n  isLoggedIn: false,\r\n  inProgress: false,\r\n};\r\n\r\nexport default function auth(state = initialAuthState, action) {\r\n  switch (action.type) {\r\n    case CLEAR_ERROR_MSG:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n      };\r\n\r\n    case SIGNUP_START:\r\n    case LOGIN_START:\r\n      return {\r\n        ...state,\r\n        isProgress: true,\r\n      };\r\n\r\n    case SIGNUP_SUCCESS:\r\n    case LOGIN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        user: action.user,\r\n        isLoggedIn: true,\r\n        isProgress: false,\r\n        error: null,\r\n      };\r\n\r\n    case SIGNUP_FAIL:\r\n    case LOGIN_FAIL:\r\n      return {\r\n        ...state,\r\n        isProgress: false,\r\n        error: action.error,\r\n      };\r\n\r\n    case AUTHENTICATE_USER:\r\n      return {\r\n        ...state,\r\n        user: action.user,\r\n        isLoggedIn: true,\r\n      };\r\n\r\n    case SIGNOUT_USER:\r\n      return {\r\n        ...state,\r\n        user: {},\r\n        isLoggedIn: false,\r\n      };\r\n    case EDIT_USER_SUCCESSFUL:\r\n      return {\r\n        ...state,\r\n        user: action.user,\r\n        error: false,\r\n      };\r\n    case EDIT_USER_FAILED:\r\n      return {\r\n        error: action.message,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  USER_PROFILE_SUCCESS,\r\n  USER_PROFILE_FAILURE,\r\n  FETCH_USER_PROFILE,\r\n} from \"../actions/actionTypes\";\r\n\r\nconst initalProfileState = {\r\n  user: {},\r\n  error: null,\r\n  success: null,\r\n  inProgress: false,\r\n};\r\nexport default function profile(state = initalProfileState, action) {\r\n  switch (action.type) {\r\n    case USER_PROFILE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        success: true,\r\n        user: action.user,\r\n        inProgress: false,\r\n      };\r\n    case USER_PROFILE_FAILURE:\r\n      return {\r\n        ...state,\r\n        error: action.error,\r\n        inProgress: false,\r\n      };\r\n    case FETCH_USER_PROFILE:\r\n      return {\r\n        ...state,\r\n        inProgress: true,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  FETCH_FRIENDS_SUCCESS,\r\n  ADD_FRIEND,\r\n  REMOVE_FRIEND,\r\n} from \"../actions/actionTypes\";\r\n\r\nconst defaultProfileState = [];\r\n\r\n// profile reducer\r\nexport default function friends(state = defaultProfileState, action) {\r\n  switch (action.type) {\r\n    case FETCH_FRIENDS_SUCCESS:\r\n      return [...action.friends];\r\n    // return action.friends;\r\n    case ADD_FRIEND:\r\n      return [action.friend, ...state];\r\n    case REMOVE_FRIEND:\r\n      return state.filter((friend) => friend.to_user._id !== action.userId);\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { FETCH_SEARCH_RESULTS_SUCCESS } from \"../actions/actionTypes\";\r\n\r\nconst initialSearchState = {\r\n  results: [],\r\n};\r\n\r\nexport default function search(state = initialSearchState, action) {\r\n  switch (action.type) {\r\n    case FETCH_SEARCH_RESULTS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        results: action.users,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport posts from \"./posts\";\r\nimport auth from \"./auth\";\r\nimport profile from \"./profile\";\r\nimport friends from \"./friends\";\r\nimport search from \"./search\";\r\n\r\nexport default combineReducers({\r\n  posts,\r\n  auth,\r\n  profile,\r\n  friends,\r\n  search,\r\n});\r\n","import {\r\n  UPDATE_POSTS,\r\n  ADD_POST,\r\n  ADD_COMMENT,\r\n  UPDATE_POST_LIKE,\r\n  UPDATE_COMMENT_LIKE,\r\n} from \"../actions/actionTypes\";\r\n\r\nexport default function posts(state = [], action) {\r\n  switch (action.type) {\r\n    case UPDATE_POSTS:\r\n      return action.posts;\r\n    case ADD_POST:\r\n      return [action.post, ...state];\r\n    case ADD_COMMENT:\r\n      const newPost = state.map((post) => {\r\n        if (post._id === action.postId) {\r\n          return {\r\n            ...post,\r\n            comments: [action.comment, ...post.comments],\r\n          };\r\n        }\r\n        return post;\r\n      });\r\n      return newPost;\r\n\r\n    case UPDATE_POST_LIKE:\r\n      const newLike = state.map((post) => {\r\n        if (post._id === action.postId) {\r\n          return {\r\n            ...post,\r\n            likes: [action.userId, ...post.likes],\r\n          };\r\n        }\r\n        return post;\r\n      });\r\n      return newLike;\r\n\r\n    case UPDATE_COMMENT_LIKE:\r\n      const newPostLike = state.map((post) => {\r\n        const newCommentLike = post.comments.map((comment) => {\r\n          if (comment._id === action.commentId) {\r\n            return {\r\n              ...comment,\r\n              likes: [action.userId, ...comment.likes],\r\n            };\r\n            // return comment.likes.concat(action.userId);\r\n          }\r\n          return comment;\r\n        });\r\n        return {\r\n          ...post,\r\n          comments: newCommentLike,\r\n        };\r\n      });\r\n      return newPostLike;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\n\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport { configureStore } from \"./store/index\";\n\nconst store = configureStore();\n// console.log(\"store\", store);\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport logger from \"redux-logger\";\r\nimport reducer from \"../reducers/index\";\r\n\r\nlet store;\r\n\r\nexport function configureStore() {\r\n  store = createStore(reducer, applyMiddleware(thunk, logger));\r\n  return store;\r\n}\r\n"],"sourceRoot":""}